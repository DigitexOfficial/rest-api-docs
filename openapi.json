{
    "openapi": "3.0.2",
    "info": {
        "title": "Digitex Rest Trading API",
        "version": "0.0.1",
        "description": "<br>\n<h4>Digitex's REST trading api specification</h4>\n\nIn order to start, one has to register either at https://testnet.digitexfutures.com for testnet (virtual funds trading) or at https://digitex.io - our mainnet (real money trading).\n\nAfter registration you need to obtain your trading token in your account.\n\nDirect links to the account page:\n- testnet - https://testnet.digitexfutures.com/profile/account\n- mainet - https://digitex.io/trade/profile/account\n\nIf you have already created your token, you can simply copy it, else click on \"Create\" in the API section of your account.\n\n\nIMPORTANT NOTES!\n\n- All of the data which is expected to be float or decimal are passed as strings. Data is converted into Decimal/float format on the client level\n- All timestamps are in nanoseconds UTC\n- Enums, such as order types, status etc can be found in Exchange-Meta-Data group of endpoints",
        "contact": {
            "name": "Sergiy Pavlyuk",
            "email": "spavlyuk@digitex.io"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "https://testnet.digitexfutures.com/dapi",
            "description": "Testnet"
        },
        {
            "url": "https://digitex.io/dapi",
            "description": "Mainnet"
        },
        {
            "url": "http://127.0.0.1:8000/dapi",
            "description": "For internal testing purposes only"
        }
    ],
    "paths": {
        "/v1/exchange/bot/currency/": {
            "summary": "Currency list",
            "description": "Currency list",
            "get": {
                "tags": [
                    "Public",
                    "Exchange-Meta-Data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Currency"
                                    }
                                },
                                "examples": {
                                    "CurrencyDefiniitionsResponseExample": {
                                        "value": [
                                            {
                                                "id": 1,
                                                "name": "Digitex",
                                                "code": "DGTX",
                                                "currency_scale": 4,
                                                "withdraw_fee": "100.000000000000000000"
                                            },
                                            {
                                                "id": 2,
                                                "name": "Bitcoin",
                                                "code": "BTC",
                                                "currency_scale": 8,
                                                "withdraw_fee": "0.000050000000000000"
                                            },
                                            {
                                                "id": 4,
                                                "name": "Ethereum",
                                                "code": "ETH",
                                                "currency_scale": 8,
                                                "withdraw_fee": "100.000000000000000000"
                                            },
                                            {
                                                "id": 6,
                                                "name": "USDT",
                                                "code": "USDT",
                                                "currency_scale": 4,
                                                "withdraw_fee": "100.000000000000000000"
                                            },
                                            {
                                                "id": 7,
                                                "name": "USD Coin",
                                                "code": "USDC",
                                                "currency_scale": 4,
                                                "withdraw_fee": "100.000000000000000000"
                                            },
                                            {
                                                "id": 32,
                                                "name": "Blockster",
                                                "code": "BXR",
                                                "currency_scale": 4,
                                                "withdraw_fee": "0.000000000000000000"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Currencies list"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "summary": "Currencies",
                "description": "Returns list of currencies that are available to use in the wallet"
            },
            "parameters": [
                {
                    "name": "currency_id",
                    "description": "Optional query parameter to return single currency info, if empty returns list of available currencies",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                }
            ]
        },
        "/v1/exchange/bot/ping": {
            "summary": "Utility endpoint to ping the server, If \"pong\" is in the response, then the service is working properly. Additionally there is a timestamp value of servers's internal time. Note all times are in UTC",
            "description": "Utility endpoint to ping the server, If \"pong\" is in the response, then the service is working properly. Additionally there is a timestamp value of servers's internal time. Note all times are in UTC",
            "get": {
                "tags": [
                    "Public"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ping"
                                },
                                "examples": {
                                    "PingResponseExample": {
                                        "value": {
                                            "timestamp": 1234598990003,
                                            "datetime": "2021-09-19 17:18:44.820400",
                                            "message": "pong"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Request succesfull"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "summary": "Ping",
                "description": "Utility endpoint to ping the server, If \"pong\" is in the response, then the service is working properly. Additionally there is a timestamp value of servers's internal time. Note all times are in UTC"
            }
        },
        "/v1/exchange/bot/order_book/": {
            "summary": "Returns order book for the market",
            "get": {
                "tags": [
                    "Public"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OrderBook"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "summary": "Order book",
                "description": "Returns exchange's order book for selected market"
            },
            "parameters": [
                {
                    "examples": {
                        "market_id": {
                            "value": "2"
                        }
                    },
                    "name": "market_id",
                    "description": "market_id\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/v1/exchange/bot/recent_trades/": {
            "summary": "Get recent trades",
            "get": {
                "tags": [
                    "Public"
                ],
                "parameters": [
                    {
                        "name": "max_trades",
                        "description": "Limit maximum number of recent trades. Default limit is 1000",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "market_id": {
                                "value": "1"
                            }
                        },
                        "name": "market_id",
                        "description": "market id",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RecentTrade"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "summary": "List of recent trades done at the market"
            },
            "parameters": [
                {
                    "examples": {
                        "market_id": {
                            "value": "2"
                        }
                    },
                    "name": "market_id",
                    "description": "Market id for the trades",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "max_trades",
                    "description": "limits the amount of max trades. if not specified the trades are limited by the last 60 minutes",
                    "schema": {

                    },
                    "in": "query"
                }
            ]
        },
        "/v1/exchange/bot/history/ohlcv/": {
            "summary": "View for OHLCV (open-high-low-close chart) candles with selected by datetime",
            "description": "View for OHLCV (open-high-low-close chart) candles with selected by datetime",
            "get": {
                "tags": [
                    "Public"
                ],
                "parameters": [
                    {
                        "name": "date_from",
                        "description": "Unix timestamp (UTC) of the leftmost required bar, including from.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "date_to",
                        "description": "Unix timestamp (UTC) of the rightmost required bar, including to. It can be in the future. In this case, the rightmost required bar is the latest available bar.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "market_id",
                        "description": "int market_id",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "top_n",
                        "description": "number of records ohlcv, default 10000",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "resolution",
                        "description": "Symbol resolution. Possible resolutions are daily (D or 1D, 2D ... ), weekly (1W, 2W ...), monthly (1M, 2M...) and an intra-day resolution – minutes(1, 2 ...).",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OHLCV"
                                }
                            }
                        },
                        "description": "Get array of OHLCVs (open-high-low-close chart)"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "deprecated": false,
                "summary": "OHLCV",
                "description": "Returns open high low close volume aggregated data for selected market and timeframe.\n\nIn any case returns max 1k datapoints. Optionally datapoints can be filtered with date_from and date_to parameters\n\nAvailable timeframes (resolutions):\n- daily (D or 1D, 2D ... )\n- weekly (1W, 2W ...)\n- monthly (1M, 2M...)\n- minutes (1, 2 ...)."
            }
        },
        "/v1/exchange/bot/trader/order/": {
            "summary": "Place an order",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaceOrder"
                            },
                            "examples": {
                                "PlaceOrderExample": {
                                    "value": {
                                        "id": "986ca2aa-9f21-4a90-87f0-692b88c92bdf",
                                        "market_id": 24,
                                        "side": 1,
                                        "type": 2,
                                        "duration": 2,
                                        "leverage": 1,
                                        "quantity": 1234,
                                        "price": 0.0038
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Private"
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "201": {
                        "$ref": "#/components/responses/PlaceOrder"
                    }
                },
                "security": [
                    {
                        "TradersToken": [
                        ]
                    }
                ],
                "summary": "Place an order"
            }
        },
        "/v1/exchange/bot/exchange_info/": {
            "summary": "Get exchange info. This endpoint returns all metadata for the exchange.",
            "get": {
                "tags": [
                    "Public",
                    "Exchange-Meta-Data"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ExchangeInfo"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "summary": "Exchange information",
                "description": "This endpoint returns all metadata for the exchange, such as:\n- traders ratelimits. сurrently this is not strictly enforced, however rate limits can be applied individually if the trader abuses the API\n- notifications. This field will contain all notifications/announcements from the exchnage. Please note, these are not system notifications. \n- servertime - server's Unix timestamp in microseconds.\n- currencies\n- markets\n- order types enum values (LIMIT/MARKET)\n- time in force / order duruation enum values (e.g Good till funding, Good till cancelled)\n- order_sides enum values (But/Sell)\n- order_positions enum values(Long/Short)\n- order_status (Pending, Accepted, Filled, etc)\n"
            }
        },
        "/v1/exchange/bot/markets/": {
            "summary": "Markets",
            "description": "Available markets to trade",
            "get": {
                "tags": [
                    "Public",
                    "Exchange-Meta-Data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Market"
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "value": [
                                            {
                                                "id": 2,
                                                "name": "ETH/USD",
                                                "code": "ETHUSD",
                                                "market_type": 1,
                                                "base_currency": "ETH",
                                                "quote_currency": "USD",
                                                "description": "ETH/USD Perpetual Futures",
                                                "tick_size": "1.000000000000000000",
                                                "tick_price": "1.000000000000000000",
                                                "tick_scale": 0,
                                                "pnl_scale": 0,
                                                "mark_price_scale": 2,
                                                "category": "Futures",
                                                "quantity_scale": 0,
                                                "large_scale": 0,
                                                "lot_size": "1.000000000000000000",
                                                "openPx": 2212,
                                                "highPx": 2332,
                                                "lowPx": 2203,
                                                "pxChange24h": 3.5340314136125652,
                                                "volume24h": 152110,
                                                "volume24hUsd": 910147.66152127,
                                                "lastTradePx": 2292,
                                                "usd_scale": 2,
                                                "liquidity_reward_currency": 1,
                                                "contract_currency": "DGTX",
                                                "funding_rate": 2.0E-4
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "List of markets"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "summary": "Markets",
                "description": "Get list of markets"
            },
            "parameters": [
                {
                    "name": "market_id",
                    "description": "Optional query to return just one market_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                }
            ]
        },
        "/v1/exchange/bot/order_history/": {
            "summary": "Get order history",
            "description": "Includes orders that are no longer active. These are orders that have the following status:\n- FILLED - numerical status 5. Order has been fully filled\n- CANCELLED - numerical status 4. Order has been cancelled by user. Note partially filled order can be cancelled as well\n- REJECTED - numerical status 3. Order has been rejected by matching engine.\n\nAll query parameters are optional.",
            "get": {
                "tags": [
                    "Private"
                ],
                "parameters": [
                    {
                        "examples": {
                            "created_at_from": {
                                "value": "2020-04-01T13:37:39.867Z"
                            }
                        },
                        "name": "created_at_from",
                        "description": "Timestamp in nanoseconds. Filters for order created at or after this timestamp",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "created_at_to": {
                                "value": "2020-04-02T13:37:39.867Z"
                            }
                        },
                        "name": "created_at_to",
                        "description": "Timestamp in nanoseconds. Filters for orders created before this timestamp",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "cursor": {
                                "value": "qweJKFA31rnkjASFALKhl1324"
                            }
                        },
                        "name": "cursor",
                        "description": "cursor for fetching pages",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "market_id": {
                                "value": "2"
                            }
                        },
                        "name": "market_id",
                        "description": "Id of a market",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "page_size": {
                                "value": "30"
                            }
                        },
                        "name": "page_size",
                        "description": "Amount of order displayed per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "status": {
                                "value": "2"
                            }
                        },
                        "name": "status",
                        "description": "orders status",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "trader_id": {
                                "value": "2"
                            }
                        },
                        "name": "trader_id",
                        "description": "Id of a users trader",
                        "schema": {
                            "type": "number"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MyOrders"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "summary": "Order history",
                "description": "Includes orders that are no longer active. These are orders that have the following status:\n- FILLED - numerical status 5. Order has been fully filled\n- CANCELLED - numerical status 4. Order has been cancelled by user. Note partially filled order can be cancelled as well\n- REJECTED - numerical status 3. Order has been rejected by matching engine.\n\nAll query parameters are optional."
            },
            "parameters": [
                {
                    "examples": {
                        "market_id": {
                            "value": "2"
                        }
                    },
                    "name": "market_id",
                    "description": "Id of a market",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "page_size": {
                            "value": "30"
                        }
                    },
                    "name": "page_size",
                    "description": "Amount of order displayed per page",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "created_at_to": {
                            "value": "1632234345216613"
                        }
                    },
                    "name": "created_at_to",
                    "description": "Timestamp in nanoseconds. Filters for orders created before this timestamp",
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "created_at_from": {
                            "value": "1632234345216613"
                        }
                    },
                    "name": "created_at_from",
                    "description": "Timestamp in nanoseconds. Filters for order created at or after this timestamp",
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "trader_id": {
                            "value": "2"
                        }
                    },
                    "name": "trader_id",
                    "description": "Id of a users trader",
                    "schema": {
                        "type": "number"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "status": {
                            "value": "2"
                        }
                    },
                    "name": "status",
                    "description": "orders status",
                    "schema": {
                        "$ref": "#/components/schemas/OrderStatus"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "cursor": {
                            "value": "qweJKFA31rnkjASFALKhl1324"
                        }
                    },
                    "name": "cursor",
                    "description": "cursor for fetching pages",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/v1/exchange/bot/order_status/": {
            "summary": "Get orders status",
            "description": "Get status of orders by query params",
            "get": {
                "tags": [
                    "Private"
                ],
                "parameters": [
                    {
                        "examples": {
                            "order_id": {
                                "value": "d3c32cc8-89b7-4a4a-8847-7a255e7739ad"
                            }
                        },
                        "name": "client_id",
                        "description": "uuid of the order",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "examples": {
                            "trader_id": {
                                "value": "3"
                            }
                        },
                        "name": "trader_id",
                        "description": "optional trader's id. Works in case user has several trading accounts",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderStatusInfo"
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "value": [
                                            {
                                                "created_at": 1566818724722,
                                                "client_id": "testOrder",
                                                "id": "22542179qwerqwetasdf",
                                                "quantity": "0",
                                                "orig_quantity": "10",
                                                "price": "0",
                                                "reduceOnly": false,
                                                "side": "BUY",
                                                "status": "NEW",
                                                "stopPrice": "9300",
                                                "market__code": "BTCUSDT",
                                                "timeInForce": "GTC",
                                                "type": "LIMIT",
                                                "executed_quantity": 12,
                                                "average_price": 123
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Must return list of orders"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "summary": "Order status",
                "description": "Get status of orders by query params"
            },
            "parameters": [
                {
                    "examples": {
                        "trader_id": {
                            "value": "3"
                        }
                    },
                    "name": "trader_id",
                    "description": "optional trader's id. Works in case user has several trading accounts",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "order_id": {
                            "value": "d3c32cc8-89b7-4a4a-8847-7a255e7739ad"
                        }
                    },
                    "name": "client_id",
                    "description": "uuid of the order",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/v1/exchange/bot/orders/": {
            "summary": "Get my open orders",
            "description": "Open orders are orders that have not been fully filled yet.\n\nThese are order with order_status:\n- PENDING - numerical status 1 - the order has been recieved, however not yet accepted by the exchange matching engine\n- ACCEPTED - numerical status 2 - the order has been recieved, validated and accepted by the exchange matching engine\n- PARTIAL - numerical status 6 - ACCEPTED + partially filled. Partial filled information and remaining volume are part of the open order information\n\n\nOrders can be filtered with any of the query parameters. No query parameters mean all open orders.",
            "get": {
                "tags": [
                    "Private"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "description": "- ACCEPTED (2) - order has been accepted for execution by matching engine\n- PENDING (1) - order has been recieved, however not yet accepted\n- PARTIAL (6) - order has been only partially filled\n",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "cursor": {
                                "value": "cD0yMDIxLTA4LTE4KzE1JTNBMjQlM0EwOS43OTczMTUlMkIwMCUzQTAw"
                            }
                        },
                        "name": "cursor",
                        "description": "Cursor for fetching. Pagination",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "market_id": {
                                "value": "2"
                            }
                        },
                        "name": "market_id",
                        "description": "id of a market",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "examples": {
                            "page_size": {
                                "value": "50"
                            }
                        },
                        "name": "page_size",
                        "description": "Size of a paginator page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "side": {
                                "value": "1"
                            }
                        },
                        "name": "side",
                        "description": "Filter by order side",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "trader_id": {
                                "value": "2"
                            }
                        },
                        "name": "trader_id",
                        "description": "Id of a trader",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "type": {
                                "value": "3"
                            }
                        },
                        "name": "type",
                        "description": " MARKET = 1\n LIMIT = 2",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MyOrders"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "summary": "All orders",
                "description": "Open orders are orders that have not been fully filled yet.\n\nThese are order with order_status:\n- PENDING - numerical status 1 - the order has been recieved, however not yet accepted by the exchange matching engine\n- ACCEPTED - numerical status 2 - the order has been recieved, validated and accepted by the exchange matching engine\n- PARTIAL - numerical status 6 - ACCEPTED + partially filled. Partial filled information and remaining volume are part of the open order information\n\n\nOrders can be filtered with any of the query parameters. No query parameters means all open orders."
            },
            "parameters": [
                {
                    "examples": {
                        "trader_id": {
                            "value": "2"
                        }
                    },
                    "name": "trader_id",
                    "description": "Id of a trader",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "type": {
                            "value": "3"
                        }
                    },
                    "name": "type",
                    "description": " MARKET = 1\n LIMIT = 2",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "side": {
                            "value": "1"
                        }
                    },
                    "name": "side",
                    "description": "Filter by order side",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "market_id": {
                            "value": "2"
                        }
                    },
                    "name": "market_id",
                    "description": "id of a market",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": false
                },
                {
                    "examples": {
                        "status": {
                            "value": "2"
                        }
                    },
                    "name": "status",
                    "description": "- ACCEPTED (2) - order has been accepted for execution by matching engine\n- PENDING (1) - order has been recieved, however not yet accepted\n- PARTIAL (6) - order has been only partially filled\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "page_size": {
                            "value": "50"
                        }
                    },
                    "name": "page_size",
                    "description": "Size of a paginator page",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "cursor": {
                            "value": "cD0yMDIxLTA4LTE4KzE1JTNBMjQlM0EwOS43OTczMTUlMkIwMCUzQTAw"
                        }
                    },
                    "name": "cursor",
                    "description": "Cursor for fetching. Pagination",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/v1/exchange/bot/trade_history/": {
            "summary": "Get trade history",
            "description": "Get trade history of a trader",
            "get": {
                "tags": [
                    "Private"
                ],
                "parameters": [
                    {
                        "examples": {
                            "traded_at_from": {
                                "value": "1632234345216613"
                            }
                        },
                        "name": "traded_at_from",
                        "description": "Timestamp in nanoseconds",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "traded_at_to": {
                                "value": "1632234345216613"
                            }
                        },
                        "name": "traded_at_to",
                        "description": "Timestamp in nanoseconds. Only return contracts traded before this time.",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "cursor": {
                                "value": "cD0yMDIxLTA4LTE4KzE1JTNBMjQlM0EwOS43OTczMTUlMkIwMCUzQTAw"
                            }
                        },
                        "name": "cursor",
                        "description": "Cursor for fetching pages in pagination",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "market_id": {
                                "value": "2"
                            }
                        },
                        "name": "market_id",
                        "description": "Id of a market",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page_size",
                        "description": "size of a paginator page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "trader_id": {
                                "value": "2"
                            }
                        },
                        "name": "trader_id",
                        "description": "optional trader id",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MyTrades"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "TradersToken": [
                        ]
                    }
                ],
                "summary": "Trade history",
                "description": "Get trade history of a trader"
            },
            "parameters": [
                {
                    "examples": {
                        "market_id": {
                            "value": "2"
                        }
                    },
                    "name": "market_id",
                    "description": "Id of a market",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "trader_id": {
                            "value": "2"
                        }
                    },
                    "name": "trader_id",
                    "description": "optional trader id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "traded_at_to": {
                            "value": "2020-04-02T13:37:39.867Z"
                        }
                    },
                    "name": "traded_at_to",
                    "description": "timestamp in nanoseconds. Only return contracts traded before this time.",
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "traded_at_from": {
                            "value": "2020-04-01T13:37:39.867Z"
                        }
                    },
                    "name": "traded_at_from",
                    "description": "timestamp in nanoseconds. Only return contracts traded after this time.",
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "name": "page_size",
                    "description": "size of a paginator page",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "cursor": {
                            "value": "cD0yMDIxLTA4LTE4KzE1JTNBMjQlM0EwOS43OTczMTUlMkIwMCUzQTAw"
                        }
                    },
                    "name": "cursor",
                    "description": "Cursor for fetching pages in pagination",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/v1/exchange/bot/trader/order/update/": {
            "summary": "Order update",
            "description": "Order update",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrder"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Private"
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "201": {
                        "$ref": "#/components/responses/UpdateOrder"
                    }
                },
                "security": [
                    {
                        "TradersToken": [
                        ]
                    }
                ],
                "summary": "Order update"
            }
        },
        "/v1/exchange/bot/trader/order/cancel/": {
            "description": "",
            "post": {
                "requestBody": {
                    "description": "to cancel an order(s) - send list of cliet_id(s) and the market for which you want to close orders, you can close orders only for one market at a time\n\nto cancel all order(s) by market - send only market_id\n\nto cancel all orders - send empty body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelOrder"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Private"
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "201": {
                        "$ref": "#/components/responses/CancelOrder"
                    }
                },
                "security": [
                    {
                        "TradersToken": [
                        ]
                    }
                ],
                "summary": "Cancel order"
            }
        },
        "/v1/exchange/bot/position/": {
            "summary": "Shows trader's position",
            "description": "Shows current position of the trader in the futures market",
            "get": {
                "tags": [
                    "Private"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PositionItem"
                                    }
                                },
                                "examples": {
                                    "PositionResponseList": {
                                        "value": [
                                            {
                                                "contractCurrency": "DGTX",
                                                "leverage": 1.8294143915246146,
                                                "market": "BTCUSD",
                                                "markPrice": 49587.53,
                                                "positionMargin": "0.000000000000000000",
                                                "quantity": 0,
                                                "timestamp": 1629797235
                                            },
                                            {
                                                "contractCurrency": "DGTX",
                                                "entryPrice": 3216,
                                                "leverage": 1.8294143915246146,
                                                "liquidationPrice": 3164,
                                                "market": "ETHUSD",
                                                "markPrice": 3326.16,
                                                "positionMargin": "106.543400000000000000",
                                                "quantity": 1,
                                                "positionSide": "Long",
                                                "timestamp": 1629797235,
                                                "unrealizedPnl": 111
                                            },
                                            {
                                                "contractCurrency": "USDC",
                                                "entryPrice": 47100,
                                                "leverage": 1.8294143915246146,
                                                "liquidationPrice": 23560,
                                                "market": "FS:BTCUSD",
                                                "markPrice": 49587.53,
                                                "positionMargin": "47.090197100000000000",
                                                "quantity": 1,
                                                "positionSide": "Long",
                                                "timestamp": 1629797235,
                                                "unrealizedPnl": 2.47
                                            },
                                            {
                                                "contractCurrency": "USDC",
                                                "leverage": 1.8294143915246146,
                                                "market": "FS:BTC1USD",
                                                "markPrice": 49587.53,
                                                "positionMargin": "0.000000000000000000",
                                                "quantity": 0,
                                                "timestamp": 1629797235
                                            },
                                            {
                                                "contractCurrency": "USDC",
                                                "leverage": 1.8294143915246146,
                                                "market": "FS:ETHUSD",
                                                "markPrice": 3326.16,
                                                "positionMargin": "0.000000000000000000",
                                                "quantity": 0,
                                                "timestamp": 1629797235
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Get all orders"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "TradersToken": [
                        ]
                    }
                ],
                "summary": "Trader position",
                "description": ""
            }
        },
        "/v1/exchange/bot/balances/": {
            "summary": "Balances",
            "description": "Balances",
            "get": {
                "tags": [
                    "Private"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Balance"
                                    }
                                }
                            }
                        },
                        "description": "Returns user's current balances of main and trading account."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "TradersToken": [
                        ]
                    }
                ],
                "summary": "Balances",
                "description": "Getting balances"
            }
        }
    },
    "components": {
        "schemas": {
            "UpdateOrder": {
                "description": "",
                "required": [
                    "client_id",
                    "duration",
                    "leverage",
                    "market_id",
                    "price",
                    "quantity",
                    "side",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "client_id": {
                        "description": "order's client_id",
                        "type": "string"
                    },
                    "duration": {
                        "$ref": "#/components/schemas/OrderDuration",
                        "description": "UNDEFINED - 0\nGTD - 1\nGTC - 2\nGTF - 3\nIOC - 4\nFOK - 5"
                    },
                    "leverage": {
                        "description": "desired leverage for margin trades",
                        "type": "integer"
                    },
                    "market_id": {
                        "description": "market id",
                        "type": "integer"
                    },
                    "price": {
                        "description": "Desired price of an order",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "quantity of an order",
                        "type": "string"
                    },
                    "side": {
                        "$ref": "#/components/schemas/OrderSide",
                        "description": "BUY - 1\nSELL - 2"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OrderType",
                        "description": "LIMIT - 1\nMARKET - 2"
                    }
                },
                "example": {
                    "client_id": "3877a30e-6acb-49f5-a101-5c46656cd8a5",
                    "duration": 1,
                    "leverage": 1,
                    "market_id": 1,
                    "price": "51000.000000000000000000",
                    "quantity": "1.000000000000000000",
                    "side": 2,
                    "type": 2
                }
            },
            "CancelOrder": {
                "title": "Root Type for CancelOrder",
                "description": "",
                "type": "object",
                "properties": {
                    "market_id": {
                        "format": "int32",
                        "description": "market_id",
                        "type": "integer"
                    },
                    "orders_client_ids": {
                        "description": "list of cliend_ids to cancel",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "market_id": 1,
                    "orders_client_ids": [
                        "client_id1",
                        "client_id2",
                        "..."
                    ]
                }
            },
            "TradeHistory": {
                "title": "Root Type for TradeHistory",
                "description": "Data type for trades",
                "type": "object",
                "properties": {
                    "market_id": {
                        "format": "int32",
                        "description": "Internal market id",
                        "type": "integer"
                    },
                    "side": {
                        "$ref": "#/components/schemas/OrderSide",
                        "description": "    Buy = 1\n    Sell = 2"
                    },
                    "price": {
                        "description": "Traded price",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Quantity of the order. For futures - this is amount of contracts traded.\nIf spot and order side is Buy (side=1) - amount of quote currency\nIf spot and order side is Sell (side=2) - amount of base currency",
                        "type": "string"
                    },
                    "traded_at": {
                        "format": "int32",
                        "description": "Timestamp of execution trade",
                        "type": "integer"
                    },
                    "contract_id": {
                        "description": "uuid order id",
                        "type": "integer"
                    }
                },
                "example": "\"results\": [\n        {\n            \"trader_id\": 119887,\n            \"market_id\": 1,\n            \"traded_at\": 1632224319506351,\n            \"side\": 1,\n            \"price\": \"43415.000000000000000000\",\n            \"quantity\": \"23.000000000000000000\",\n            \"contract_id\": 164918037\n        },\n        {\n            \"trader_id\": 119887,\n            \"market_id\": 1,\n            \"traded_at\": 1632141224095377,\n            \"side\": 1,\n            \"price\": \"42860.000000000000000000\",\n            \"quantity\": \"453.000000000000000000\",\n            \"contract_id\": 163763264\n        },\n        {\n            \"trader_id\": 119887,\n            \"market_id\": 1,\n            \"traded_at\": 1632070113354465,\n            \"side\": 2,\n            \"price\": \"47565.000000000000000000\",\n            \"quantity\": \"23.000000000000000000\",\n            \"contract_id\": 162455410\n        }\n    ]"
            },
            "PlaceOrder": {
                "title": "Root Type for PlaceOrder",
                "description": "",
                "type": "object",
                "properties": {
                    "market_id": {
                        "format": "int32",
                        "description": "market id, can be found in markets instance",
                        "type": "integer"
                    },
                    "side": {
                        "$ref": "#/components/schemas/OrderSide",
                        "description": "    BUY = 1\n    SELL = 2"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OrderType",
                        "description": "    MARKET = 1\n    LIMIT = 2"
                    },
                    "duration": {
                        "$ref": "#/components/schemas/OrderDuration",
                        "description": "duration of the order\n    \n    UNDEFINED = 0\n    GFD = 1\n    GTC = 2\n    GTF = 3\n    IOC = 4\n    FOK = 5"
                    },
                    "leverage": {
                        "format": "int32",
                        "description": "Leverage of the trades, only valid for futures market and will be ignored for spot",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "quantity of the order. If you are trading futures, this is - amount of contracts.\n\nfor spot - it depends on your side.",
                        "type": "string"
                    },
                    "price": {
                        "description": "price of the orders",
                        "type": "string"
                    },
                    "client_id": {
                        "description": "user generated uidid. it is optional, the backend will generate one if nothing is provided",
                        "type": "string"
                    }
                },
                "example": {
                    "client_id": "4cf82f66-697a-43c9-9f3b-4f7ad838ac10",
                    "duration": 2,
                    "leverage": 1,
                    "market_id": 1,
                    "price": "45000.000000000000000000",
                    "quantity": "1.000000000000000000",
                    "side": 1,
                    "trader_id": 119511,
                    "type": 2
                }
            },
            "ExchangeInfo": {
                "title": "Root Type for Get_exchange_info",
                "description": "",
                "type": "object",
                "properties": {
                    "notifications": {
                        "description": "List of recent notifications that can affect your trading experience. ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        }
                    },
                    "currencies": {
                        "description": "List of available currencies",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    },
                    "markets": {
                        "description": "List of available markets",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Market"
                        }
                    },
                    "rate_limits": {
                        "description": "User's currently enforced rate limits. Not implemented yet",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RateLimits"
                        }
                    },
                    "server_time": {
                        "format": "int32",
                        "description": "Current server's time",
                        "type": "integer"
                    },
                    "order_meta": {
                        "$ref": "#/components/schemas/OrderMeta",
                        "description": "Order meta params from:\nOrder type\nOrder duration\nOrder side\nOrder position\nOrder status\n"
                    }
                },
                "example": {
                    "rate_limits": [
                        {
                            "interval": "SECOND",
                            "limit": 50
                        },
                        {
                            "interval": "MINUTE",
                            "limit": 500
                        }
                    ],
                    "notifications": [
                    ],
                    "server_time": 1632229225740173,
                    "currencies": [
                        {
                            "id": 1,
                            "name": "Digitex",
                            "code": "DGTX",
                            "currency_scale": 4,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        {
                            "id": 2,
                            "name": "Bitcoin",
                            "code": "BTC",
                            "currency_scale": 8,
                            "withdraw_fee": "0.000050000000000000"
                        }
                    ],
                    "markets": [
                        {
                            "id": 2,
                            "name": "ETH/USD",
                            "code": "ETHUSD",
                            "market_type": 1,
                            "base_currency": {
                                "id": 4,
                                "name": "Ethereum",
                                "code": "ETH",
                                "currency_scale": 8,
                                "withdraw_fee": "100.000000000000000000"
                            },
                            "quote_currency": {
                                "id": 3,
                                "name": "USD",
                                "code": "USD",
                                "currency_scale": 2,
                                "withdraw_fee": "100.000000000000000000"
                            },
                            "description": "ETH/USD Perpetual Futures",
                            "contract_currency": {
                                "id": 1,
                                "name": "Digitex",
                                "code": "DGTX",
                                "currency_scale": 4,
                                "withdraw_fee": "100.000000000000000000"
                            },
                            "funding": "0.0003"
                        }
                    ],
                    "order_meta": {
                        "type": {
                            "LIMIT": 1,
                            "MARKET": 2
                        },
                        "duration": {
                            "DURATION_UNDEFINED": 0,
                            "GFD": 1,
                            "GTC": 2,
                            "GTF": 3,
                            "IOC": 4,
                            "FOK": 5
                        },
                        "side": {
                            "BUY": 1,
                            "SELL": 2
                        },
                        "position": {
                            "UNDEFINED": 0,
                            "LONG": 1,
                            "SHORT": 2
                        },
                        "status": {
                            "PENDING": 1,
                            "ACCEPTED": 2,
                            "REJECTED": 3,
                            "CANCELED": 4,
                            "FILLED": 5,
                            "PARTIAL": 6
                        }
                    }
                }
            },
            "Ping": {
                "description": "regular ping response",
                "required": [
                    "timestamp",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "timestamp": {
                        "description": "unix timestamp in nanoseconds. Note, all times here and in the rest of project are in nanoseconds",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "message": {
                        "description": "pong message if success",
                        "type": "string"
                    }
                },
                "example": {
                    "timestamp": 163188462601104,
                    "message": "pong"
                }
            },
            "PagedOrdersResponse": {
                "title": "Root Type for PagedOrdersResponse",
                "description": "Paginated orders list response",
                "type": "object",
                "properties": {
                    "next": {
                        "nullable": true,
                        "description": "cursor for next page",
                        "type": "string"
                    },
                    "results": {
                        "description": "my orders",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderStatusInfo"
                        }
                    },
                    "previous": {
                        "nullable": true,
                        "description": "cursor for previous page",
                        "type": "string"
                    }
                },
                "example": {
                    "next": "cD0yMDIxLTA3LTE1KzE0JTNBMzglM0E1MS42OTQ1ODMlMkIwMCUzQTAw",
                    "results": [
                        {
                            "market_id": "14",
                            "side": 1,
                            "type": 2,
                            "status": 4,
                            "price": "30000.000000000000000000",
                            "quantity": "1.000000000000000000",
                            "created_at": 1632233150555220,
                            "client_id": "85fe88d1-7c76-46ca-86a4-daa20d7f2117",
                            "orig_quantity": "1.000000000000000000",
                            "average_price": "0",
                            "reduce_only": false,
                            "duration": 2
                        },
                        {
                            "market_id": "1",
                            "side": 1,
                            "type": 1,
                            "status": 5,
                            "price": "0.000000000000000000",
                            "quantity": "0.000000000000000000",
                            "created_at": 1632224319512703,
                            "client_id": "ebf5bce0-01fe-4826-b827-418962c5493a",
                            "orig_quantity": "23.000000000000000000",
                            "average_price": "0",
                            "reduce_only": false,
                            "duration": 4
                        },
                        {
                            "market_id": "1",
                            "side": 1,
                            "type": 2,
                            "status": 5,
                            "price": "42860.000000000000000000",
                            "quantity": "0.000000000000000000",
                            "created_at": 1632142047654264,
                            "client_id": "f265d70b-e6de-432d-87af-81aca2191b57",
                            "orig_quantity": "453.000000000000000000",
                            "average_price": "0",
                            "reduce_only": false,
                            "duration": 2
                        }
                    ]
                }
            },
            "PagedHistoryTrades": {
                "title": "Root Type for PagedTrades",
                "description": "Paginated trades response",
                "type": "object",
                "properties": {
                    "next": {
                        "nullable": true,
                        "description": "cursor for next page",
                        "type": "string"
                    },
                    "results": {
                        "description": "my trades",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TradeHistory"
                        }
                    },
                    "previous": {
                        "nullable": true,
                        "description": "cursor for previous page",
                        "type": "string"
                    }
                },
                "example": {
                    "next": "asdfasdf12-34534059asdfgasdf",
                    "previous": "asdfasdt3415sadfgsdfgsda345",
                    "results": [
                        {
                            "trader_id": 119887,
                            "market_id": 1,
                            "traded_at": 1632224319506351,
                            "side": 1,
                            "price": "43415.000000000000000000",
                            "quantity": "23.000000000000000000",
                            "contract_id": 164918037
                        },
                        {
                            "trader_id": 119887,
                            "market_id": 1,
                            "traded_at": 1632141224095377,
                            "side": 1,
                            "price": "42860.000000000000000000",
                            "quantity": "453.000000000000000000",
                            "contract_id": 163763264
                        },
                        {
                            "trader_id": 119887,
                            "market_id": 1,
                            "traded_at": 1632070113354465,
                            "side": 2,
                            "price": "47565.000000000000000000",
                            "quantity": "23.000000000000000000",
                            "contract_id": 162455410
                        }
                    ]
                }
            },
            "Balance": {
                "description": "Model for balance",
                "required": [
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "$ref": "#/components/schemas/Currency",
                        "description": "Currency"
                    },
                    "main_balance": {
                        "description": "Current Main account balance for given currency",
                        "type": "string"
                    },
                    "trading_balance": {
                        "description": "Currenct Trading account balance for given currency ",
                        "type": "string"
                    },
                    "available_balance": {
                        "description": "Available balance to the trader after taking into account all the margins",
                        "type": "string"
                    },
                    "total_balance": {
                        "description": "Total available balace (main account + trading account) does not take into consideration margin",
                        "type": "string"
                    }
                },
                "example": [
                    {
                        "currency": {
                            "id": 32,
                            "name": "Blockster",
                            "code": "BXR",
                            "currency_scale": 4,
                            "withdraw_fee": "0.000000000000000000"
                        },
                        "main_balance": "0",
                        "trading_balance": "0",
                        "total_balance": "0",
                        "available_balance": "0"
                    },
                    {
                        "currency": {
                            "id": 4,
                            "name": "Ethereum",
                            "code": "ETH",
                            "currency_scale": 8,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "main_balance": "0",
                        "trading_balance": "0.014990700000000000",
                        "total_balance": "0.014990700000000000",
                        "available_balance": "0.014990700000000000"
                    },
                    {
                        "currency": {
                            "id": 7,
                            "name": "USD Coin",
                            "code": "USDC",
                            "currency_scale": 4,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "main_balance": "0",
                        "trading_balance": "30.000071480000000000",
                        "total_balance": "30.000071480000000000",
                        "available_balance": "0.000071480000000000"
                    },
                    {
                        "currency": {
                            "id": 6,
                            "name": "USDT",
                            "code": "USDT",
                            "currency_scale": 4,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "main_balance": "0",
                        "trading_balance": "0",
                        "total_balance": "0",
                        "available_balance": "0"
                    },
                    {
                        "currency": {
                            "id": 2,
                            "name": "Bitcoin",
                            "code": "BTC",
                            "currency_scale": 8,
                            "withdraw_fee": "0.000050000000000000"
                        },
                        "main_balance": "0",
                        "trading_balance": "0.000499750000000000",
                        "total_balance": "0.000499750000000000",
                        "available_balance": "0.000499750000000000"
                    },
                    {
                        "currency": {
                            "id": 1,
                            "name": "Digitex",
                            "code": "DGTX",
                            "currency_scale": 4,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "main_balance": "0",
                        "trading_balance": "54977.006100000000000000",
                        "total_balance": "54977.006100000000000000",
                        "available_balance": "52758.016700000000000000"
                    }
                ]
            },
            "Notification": {
                "description": "",
                "required": [
                    "title",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": "\"notifications\": [\n        {\n            \"title\": \"Updating UI\",\n            \"message\": \"Rolling update on a UI.\"\n        },\n        {\n            \"title\": \"Maintenance 22.09.2020\",\n            \"message\": \"Maintenance is planning for Testnet server from 14:00 UTC to 15:00 UTC with estimated down time not more than 15 minutes.\"\n        }\n]"
            },
            "RateLimits": {
                "description": "Rate limits are not implemented yet but will be implemented in the future, once the exchange hits it reasonable total requests limit",
                "required": [
                    "interval",
                    "limit"
                ],
                "type": "object",
                "properties": {
                    "interval": {
                        "description": "Frequency of rate limit",
                        "type": "string"
                    },
                    "limit": {
                        "description": "Current trader's allowed frequency.",
                        "type": "integer"
                    }
                },
                "example": "\"rateLimits\": [\n        {\n            \"interval\": \"SECOND\",\n            \"limit\": 50\n        },\n        {\n            \"interval\": \"MINUTE\",\n            \"limit\": 500\n        }\n    ]"
            },
            "MarketType": {
                "description": "Market types\n1 - FUTURES\n2 - SPOT",
                "enum": [
                    "1",
                    "2"
                ],
                "type": "integer"
            },
            "OHLCVList": {
                "description": "OHLCV",
                "required": [
                ],
                "type": "object",
                "properties": {
                    "open": {
                        "description": "Open price for the period",
                        "type": "string"
                    },
                    "high": {
                        "description": "High price for the period",
                        "type": "string"
                    },
                    "low": {
                        "description": "Low price for the period",
                        "type": "string"
                    },
                    "close": {
                        "description": "Closing price for the period",
                        "type": "string"
                    },
                    "volume": {
                        "description": "Volume?",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Timestamp indicating start of the period",
                        "type": "integer"
                    }
                },
                "example": "\"ohlcv\": [\n        {\n            \"timestamp\": 1632475560000000,\n            \"open\": \"0.002400000000000000\",\n            \"high\": \"0.002600000000000000\",\n            \"low\": \"0.002400000000000000\",\n            \"close\": \"0.002600000000000000\",\n            \"volume\": \"24700.000000000000000000\"\n        },\n        {\n            \"timestamp\": 1632475620000000,\n            \"open\": \"0.002400000000000000\",\n            \"high\": \"0.002600000000000000\",\n            \"low\": \"0.002400000000000000\",\n            \"close\": \"0.002600000000000000\",\n            \"volume\": \"9349.000000000000000000\"\n        },\n        {\n            \"timestamp\": 1632475680000000,\n            \"open\": \"0.002600000000000000\",\n            \"high\": \"0.002600000000000000\",\n            \"low\": \"0.002400000000000000\",\n            \"close\": \"0.002400000000000000\",\n            \"volume\": \"40547.000000000000000000\"\n        },\n        {\n            \"timestamp\": 1632475740000000,\n            \"open\": \"0.002300000000000000\",\n            \"high\": \"0.002600000000000000\",\n            \"low\": \"0.002300000000000000\",\n            \"close\": \"0.002300000000000000\",\n            \"volume\": \"29188.000000000000000000\"\n        },\n        {\n            \"timestamp\": 1632475800000000,\n            \"open\": \"0.002600000000000000\",\n            \"high\": \"0.002600000000000000\",\n            \"low\": \"0.002400000000000000\",\n            \"close\": \"0.002400000000000000\",\n            \"volume\": \"11887.000000000000000000\"\n        },\n        {\n            \"timestamp\": 1632475915281597,\n            \"open\": \"2910.000000000000000000\",\n            \"high\": \"2910.000000000000000000\",\n            \"low\": \"2910.000000000000000000\",\n            \"close\": \"2910.000000000000000000\",\n            \"volume\": 5.0\n        }\n    ]"
            },
            "OHLCV": {
                "description": "OHLCV",
                "required": [
                    "ohlcv"
                ],
                "type": "object",
                "properties": {
                    "timestamp": {
                        "description": "Timestamp of the request",
                        "type": "integer"
                    },
                    "market_id": {
                        "description": "market id",
                        "type": "integer"
                    },
                    "ohlcv": {
                        "description": "result of the query",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OHLCVList"
                        }
                    },
                    "resolution": {
                        "description": "selected timeframe",
                        "type": "string"
                    }
                },
                "example": {
                    "market_id": 24,
                    "resolution": "1D",
                    "timestamp": 1632476201371805,
                    "ohlcv": [
                        {
                            "timestamp": 1632475560000000,
                            "open": "0.002400000000000000",
                            "high": "0.002600000000000000",
                            "low": "0.002400000000000000",
                            "close": "0.002600000000000000",
                            "volume": "24700.000000000000000000"
                        },
                        {
                            "timestamp": 1632475620000000,
                            "open": "0.002400000000000000",
                            "high": "0.002600000000000000",
                            "low": "0.002400000000000000",
                            "close": "0.002600000000000000",
                            "volume": "9349.000000000000000000"
                        },
                        {
                            "timestamp": 1632475680000000,
                            "open": "0.002600000000000000",
                            "high": "0.002600000000000000",
                            "low": "0.002400000000000000",
                            "close": "0.002400000000000000",
                            "volume": "40547.000000000000000000"
                        },
                        {
                            "timestamp": 1632475740000000,
                            "open": "0.002300000000000000",
                            "high": "0.002600000000000000",
                            "low": "0.002300000000000000",
                            "close": "0.002300000000000000",
                            "volume": "29188.000000000000000000"
                        },
                        {
                            "timestamp": 1632475800000000,
                            "open": "0.002600000000000000",
                            "high": "0.002600000000000000",
                            "low": "0.002400000000000000",
                            "close": "0.002400000000000000",
                            "volume": "11887.000000000000000000"
                        },
                        {
                            "timestamp": 1632475915281597,
                            "open": "2910.000000000000000000",
                            "high": "2910.000000000000000000",
                            "low": "2910.000000000000000000",
                            "close": "2910.000000000000000000",
                            "volume": 5
                        }
                    ]
                }
            },
            "ExchangeRecentTrade": {
                "description": "",
                "type": "object",
                "properties": {
                    "timestamp": {
                        "description": "timestamp of the order in nanoseconds",
                        "type": "integer"
                    },
                    "base_volume": {
                        "description": "If spot - base volume of currency. If fututes - number of contracts.",
                        "type": "string"
                    },
                    "quote_volume": {
                        "description": "If spot - amount of quote currency. If futures - \"notional\" amount - (base_volume/quantity of contracts) * price",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price at which trade was executed",
                        "type": "string"
                    },
                    "side": {
                        "$ref": "#/components/schemas/OrderSide",
                        "description": "    Buy = 1\n    Sell = 2\n    \nTakers side. "
                    },
                    "trade_id": {
                        "description": "internal trade id, used only to differentiate orders if they traded at the same nanosecod",
                        "type": "integer"
                    }
                },
                "example": "\"recent_trades\": [\n        {\n            \"trade_id\": 168016603,\n            \"timestamp\": 1632474159523338,\n            \"base_volume\": \"7\",\n            \"quote_volume\": \"311150\",\n            \"price\": \"44450\",\n            \"side\": 1\n        },\n        {\n            \"trade_id\": 168016630,\n            \"timestamp\": 1632474161334671,\n            \"base_volume\": \"3\",\n            \"quote_volume\": \"133245\",\n            \"price\": \"44415\",\n            \"side\": 2\n        }\n    ]"
            },
            "ExchangeOrderBook": {
                "title": "Root Type for OrderBook",
                "description": "OrderBook",
                "type": "object",
                "properties": {
                    "timestamp": {
                        "format": "int64",
                        "description": "Timestamp of the order_book snapshot",
                        "type": "integer"
                    },
                    "bids": {
                        "description": "Array of [bid price[str], volume[str]] pairs, volume is either contract volume or volume of base currency if spot",
                        "type": "array",
                        "items": {

                        }
                    },
                    "asks": {
                        "description": "Array of [ask price[str], volume[str]] pairs, volume is either contract volume or volume of base currency if spot",
                        "type": "array",
                        "items": {

                        }
                    },
                    "market_id": {
                        "description": "Internal market id ",
                        "type": "integer"
                    }
                },
                "example": {
                    "ticker_id": 24,
                    "timestamp": 1632230927428280,
                    "bids": [
                        [
                            "0.0025",
                            "35043"
                        ],
                        [
                            "0.0024",
                            "2953"
                        ],
                        [
                            "0.0023",
                            "71863"
                        ],
                        [
                            "0.0022",
                            "83771"
                        ],
                        [
                            "0.0021",
                            "154382"
                        ],
                        [
                            "0.002",
                            "113169"
                        ],
                        [
                            "0.0019",
                            "151088"
                        ],
                        [
                            "0.0018",
                            "65141"
                        ],
                        [
                            "0.0017",
                            "78621"
                        ],
                        [
                            "0.0016",
                            "38007"
                        ],
                        [
                            "0.0015",
                            "41408"
                        ],
                        [
                            "0.0014",
                            "146430"
                        ],
                        [
                            "0.0013",
                            "118285"
                        ],
                        [
                            "0.0012",
                            "15655"
                        ]
                    ],
                    "asks": [
                        [
                            "0.0026",
                            "50143"
                        ],
                        [
                            "0.0027",
                            "2970"
                        ],
                        [
                            "0.0028",
                            "135368"
                        ],
                        [
                            "0.0029",
                            "23598"
                        ],
                        [
                            "0.003",
                            "100429"
                        ],
                        [
                            "0.0031",
                            "70768"
                        ],
                        [
                            "0.0032",
                            "112788"
                        ],
                        [
                            "0.0033",
                            "156266"
                        ],
                        [
                            "0.0034",
                            "62223"
                        ],
                        [
                            "0.0035",
                            "171127"
                        ],
                        [
                            "0.0036",
                            "156830"
                        ],
                        [
                            "0.0037",
                            "168352"
                        ],
                        [
                            "0.0038",
                            "183610"
                        ],
                        [
                            "0.0039",
                            "103807"
                        ],
                        [
                            "0.01",
                            "99997"
                        ],
                        [
                            "0.013",
                            "198000"
                        ],
                        [
                            "0.0135",
                            "1704"
                        ],
                        [
                            "5",
                            "1000"
                        ],
                        [
                            "9",
                            "300"
                        ],
                        [
                            "50",
                            "501"
                        ]
                    ]
                }
            },
            "test": {
                "description": "",
                "required": [
                    "enum"
                ],
                "type": "object",
                "properties": {
                    "enum": {
                        "$ref": "#/components/schemas/OrderStatusInfo",
                        "description": ""
                    }
                }
            },
            "OrderStatusInfo": {
                "title": "Root Type for OrdersType",
                "description": "Orders fields",
                "type": "object",
                "properties": {
                    "side": {
                        "$ref": "#/components/schemas/OrderSide",
                        "description": "Order side"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OrderType",
                        "description": "Order type"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OrderStatus",
                        "description": "Order status"
                    },
                    "price": {
                        "description": "Price of an order",
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp of the order",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "client_id": {
                        "description": "uuid of the order",
                        "type": "string"
                    },
                    "orig_quantity": {
                        "type": "string"
                    },
                    "average_price": {
                        "description": "Price of an order",
                        "type": "string"
                    },
                    "reduce_only": {
                        "nullable": true,
                        "type": "boolean"
                    },
                    "duration": {
                        "$ref": "#/components/schemas/OrderDuration",
                        "description": "Order lifecycle condition"
                    },
                    "market_id": {
                        "description": "Internal Market Id",
                        "type": "integer"
                    }
                },
                "example": [
                    {
                        "market_id": 1,
                        "side": 1,
                        "type": 2,
                        "status": 4,
                        "price": "45000.000000000000000000",
                        "quantity": "1.000000000000000000",
                        "created_at": 1631179332132515,
                        "client_id": "7f312865-f74c-4bf3-a5e3-5eecc7e7b9fc",
                        "orig_quantity": "1.000000000000000000",
                        "average_price": "0",
                        "reduce_only": false,
                        "duration": 2
                    }
                ]
            },
            "OrderMeta": {
                "description": "Order meta params from:\nOrder type\nOrder duration\nOrder side\nOrder position\nOrdet status\n",
                "type": "object",
                "properties": {
                    "order_type": {
                        "$ref": "#/components/schemas/OrderType",
                        "description": "    LIMIT - 1\n    MARKET - 2"
                    },
                    "order_duration": {
                        "$ref": "#/components/schemas/OrderDuration",
                        "description": "    UNDEFINED - 0\n    GTD - 1\n    GTC - 2\n    GTF - 3\n    IOC - 4\n    FOK - 5"
                    },
                    "order_side": {
                        "$ref": "#/components/schemas/OrderSide",
                        "description": "    BUY - 1\n    SELL -2"
                    },
                    "order_position": {
                        "$ref": "#/components/schemas/OrderPosition",
                        "description": "    UNDEFINED - 0\n    LONG - 1\n    SHORT - 2"
                    },
                    "order_status": {
                        "$ref": "#/components/schemas/OrderStatus",
                        "description": "    PENDING - 1\n    ACCEPTED - 2\n    REJECTED - 3\n    CANCELED - 4\n    FILLED - 5\n    PARTIAL - 6"
                    }
                }
            },
            "ExchangeRecentTradeList": {
                "description": "",
                "type": "object",
                "properties": {
                    "market_id": {
                        "description": "Market id",
                        "type": "integer"
                    },
                    "timestamp": {
                        "format": "int64",
                        "description": "Request execution timestamp",
                        "type": "integer"
                    },
                    "recent_trades": {
                        "description": "List of recent trades",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExchangeRecentTrade"
                        }
                    }
                },
                "example": {
                    "market_id": 1,
                    "timestamp": 1625037107016692,
                    "recent_trades": [
                        {
                            "trade_id": 165005958,
                            "timestamp": 1632231256258892,
                            "base_volume": "1",
                            "quote_volume": "42980",
                            "price": "42980",
                            "side": 2
                        },
                        {
                            "trade_id": 165005961,
                            "timestamp": 1632231256258892,
                            "base_volume": "2",
                            "quote_volume": "85950",
                            "price": "42975",
                            "side": 2
                        }
                    ]
                }
            },
            "OrderType": {
                "description": "Order types\n    \n    1 - LIMIT\n    2 - MARKET",
                "enum": [
                    "1",
                    "2"
                ],
                "type": "integer"
            },
            "OrderStatus": {
                "description": "Order statuses\n    \n    PENDING - 1\n    ACCEPTED - 2\n    REJECTED - 3\n    CANCELED - 4\n    FILLED - 5\n    PARTIAL - 6",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6"
                ],
                "type": "integer"
            },
            "OrderDuration": {
                "description": "Duration of the order\n    \n    UNDEFINED - 0\n    GFD - 1\n    GTC - 2\n    GTF - 3\n    IOC - 4\n    FOK - 5",
                "enum": [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                ],
                "type": "integer"
            },
            "Market": {
                "description": "market model",
                "required": [
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Interal market id, is used for trading",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Human readable market name",
                        "type": "string"
                    },
                    "code": {
                        "description": "Alphanumerical market code",
                        "type": "string"
                    },
                    "market_type": {
                        "$ref": "#/components/schemas/MarketType",
                        "description": ""
                    },
                    "base_currency": {
                        "$ref": "#/components/schemas/Currency",
                        "description": "Base currency of the spot market or undrelying base currency of the futures contract"
                    },
                    "quote_currency": {
                        "$ref": "#/components/schemas/Currency",
                        "description": "Quote currency of the spot market or underlying quote currency of the futures contract"
                    },
                    "description": {
                        "description": "Full name of the market",
                        "type": "string"
                    },
                    "contract_currency": {
                        "$ref": "#/components/schemas/Currency",
                        "description": "Contract currency of the future"
                    }
                },
                "example": [
                    {
                        "id": 2,
                        "name": "ETH/USD",
                        "code": "ETHUSD",
                        "market_type": 1,
                        "base_currency": {
                            "id": 4,
                            "name": "Ethereum",
                            "code": "ETH",
                            "currency_scale": 8,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "quote_currency": {
                            "id": 3,
                            "name": "USD",
                            "code": "USD",
                            "currency_scale": 2,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "description": "ETH/USD Perpetual Futures",
                        "contract_currency": {
                            "id": 1,
                            "name": "Digitex",
                            "code": "DGTX",
                            "currency_scale": 4,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "funding": "0.0003"
                    },
                    {
                        "id": 1,
                        "name": "BTC/USD",
                        "code": "BTCUSD",
                        "market_type": 1,
                        "base_currency": {
                            "id": 2,
                            "name": "Bitcoin",
                            "code": "BTC",
                            "currency_scale": 8,
                            "withdraw_fee": "0.000050000000000000"
                        },
                        "quote_currency": {
                            "id": 3,
                            "name": "USD",
                            "code": "USD",
                            "currency_scale": 2,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "description": "BTC/USD Perpetual Futures",
                        "contract_currency": {
                            "id": 1,
                            "name": "Digitex",
                            "code": "DGTX",
                            "currency_scale": 4,
                            "withdraw_fee": "100.000000000000000000"
                        },
                        "funding": "0.0003"
                    }
                ]
            },
            "Currency": {
                "nullable": true,
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int32",
                        "description": "Internal currency id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Human readable currency name",
                        "type": "string"
                    },
                    "code": {
                        "description": "Alphanumerical currency code",
                        "type": "string"
                    },
                    "currency_scale": {
                        "format": "int32",
                        "description": "Currency scale - number of decimal points used in market quotes",
                        "type": "integer"
                    },
                    "withdraw_fee": {
                        "description": "The flat fee Digitex exchange charges a user for on chain withdrawal via its Withdrawal service",
                        "type": "string"
                    }
                },
                "example": [
                    {
                        "id": 1,
                        "name": "Digitex",
                        "code": "DGTX",
                        "currency_scale": 4,
                        "withdraw_fee": "100.000000000000000000"
                    },
                    {
                        "id": 2,
                        "name": "Bitcoin",
                        "code": "BTC",
                        "currency_scale": 8,
                        "withdraw_fee": "0.000050000000000000"
                    }
                ]
            },
            "BadRequestType": {
                "title": "Root Type for BadRequestType",
                "description": "",
                "type": "object",
                "properties": {
                    "Anystr": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "Anystr": [
                        "This field is required."
                    ]
                }
            },
            "OrderSide": {
                "description": "Order sides\n    \n    UNDEFINEd - 0  \n    BUY - 1\n    SELL - 2",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],
                "type": "integer"
            },
            "PositionItem": {
                "title": "Root Type for PositionResponseItem",
                "description": "Model for trader's position. Works only with futures",
                "type": "object",
                "properties": {
                    "leverage": {
                        "nullable": true,
                        "description": "Average leverage of the position",
                        "type": "string"
                    },
                    "quantity": {
                        "nullable": true,
                        "description": "Quantity of the contracts in the position",
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "int32",
                        "description": "Server's timestamp in microseconds",
                        "type": "integer"
                    },
                    "entry_price": {
                        "nullable": true,
                        "description": "Average entry price",
                        "type": "string"
                    },
                    "liquidation_price": {
                        "nullable": true,
                        "description": "Liquidation price of the position",
                        "type": "string"
                    },
                    "mark_price": {
                        "nullable": true,
                        "description": "Current mark price, price which used used to trigger liquidations",
                        "type": "string"
                    },
                    "position_margin": {
                        "nullable": true,
                        "description": "margin paid for the position",
                        "type": "string"
                    },
                    "market_id": {
                        "description": "market id ",
                        "type": "integer"
                    },
                    "contract_currency_id": {
                        "description": "Currency of the futures market or currency of you p&l",
                        "type": "integer"
                    },
                    "position_side": {
                        "nullable": true,
                        "$ref": "#/components/schemas/OrderPosition",
                        "description": "    LONG = 1\n    SHORT = 2"
                    },
                    "unrealized_pnl": {
                        "nullable": true,
                        "description": "Unrealized P&L of the order",
                        "type": "string"
                    }
                },
                "example": [
                    {
                        "contract_currency": "DGTX",
                        "market": "BTCUSD",
                        "market_id": 1,
                        "mark_price": "43280.976200000000000000",
                        "position_margin": "0.000000000000000000",
                        "timestamp": 1632477171485895
                    },
                    {
                        "contract_currency": "DGTX",
                        "market": "ETHUSD",
                        "market_id": 2,
                        "mark_price": "2929.473200000000000000",
                        "position_margin": "0.000000000000000000",
                        "quantity": "0.000000000000000000",
                        "timestamp": 1632477171485895
                    },
                    {
                        "contract_currency": "USDC",
                        "market": "FS:BTCUSD",
                        "market_id": 14,
                        "mark_price": "43280.976200000000000000",
                        "position_margin": "0.000000000000000000",
                        "quantity": "0.000000000000000000",
                        "timestamp": 1632477171485895
                    },
                    {
                        "contract_currency": "USDC",
                        "market": "FS:BTC1USD",
                        "market_id": 15,
                        "mark_price": "43280.976200000000000000",
                        "position_margin": "0.000000000000000000",
                        "quantity": "0.000000000000000000",
                        "timestamp": 1632477171485895
                    },
                    {
                        "contract_currency": "USDC",
                        "market": "FS:ETHUSD",
                        "market_id": 16,
                        "mark_price": "2929.473200000000000000",
                        "position_margin": "0.000000000000000000",
                        "quantity": "0.000000000000000000",
                        "timestamp": 1632477171485895
                    }
                ]
            },
            "OrderPosition": {
                "nullable": true,
                "description": "Order positions\n    \n    UNDEFINED - 0\n    LONG -1\n    SHORT - 2",
                "enum": [
                    "0",
                    "1",
                    "2"
                ],
                "type": "integer"
            }
        },
        "responses": {
            "DRFGenericExceptionResponse": {
                "$ref": "apicurio:44557#/components/responses/DRFGenericExceptionResponse"
            },
            "Balances": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Balance"
                        }
                    }
                },
                "description": ""
            },
            "RecentTrade": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ExchangeRecentTradeList"
                        }
                    }
                },
                "description": ""
            },
            "CancelOrder": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CancelOrder"
                        },
                        "examples": {
                            "CancelOrderResponse": {
                                "value": {
                                    "market_id": 1,
                                    "orders_client_ids": [
                                        "client_id_1",
                                        "client_id_2",
                                        "..."
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": ""
            },
            "PlaceOrder": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PlaceOrder"
                        },
                        "examples": {
                            "PlaceOrderResponseExample": {
                                "value": {
                                    "id": "986ca2aa-9f21-4a90-87f0-692b88c92bdf",
                                    "market_id": 24,
                                    "trader_id": 12354,
                                    "side": 1,
                                    "type": 2,
                                    "duration": 2,
                                    "leverage": 1,
                                    "quantity": 1234,
                                    "price": 0.0038
                                }
                            }
                        }
                    }
                },
                "description": ""
            },
            "UpdateOrder": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateOrder"
                        },
                        "examples": {
                            "UpdateOrderResponce": {
                                "value": {
                                    "timestamp": 1566818724722,
                                    "client_order_id": "90d26126-3b65-4274-9ecb-3365a54b0975",
                                    "order_id": "e76163a9-142d-43fa-b0d6-27c690b73676",
                                    "qty": 1,
                                    "exec_qty": 1,
                                    "avg_price": 0,
                                    "quantity": 1,
                                    "market_id": 1,
                                    "price": 48000,
                                    "reduce_only": false,
                                    "side": 1,
                                    "status": 2,
                                    "stop_price": 50000,
                                    "time_in_force": 1,
                                    "type": 2
                                }
                            }
                        }
                    }
                },
                "description": ""
            },
            "Ping": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Ping"
                        }
                    }
                },
                "description": ""
            },
            "OrderBook": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ExchangeOrderBook"
                        }
                    }
                },
                "description": ""
            },
            "OHLCV": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OHLCVList"
                        },
                        "examples": {
                            "OHLCV": {
                                "value": {
                                    "timestamp_": 1573567858064750,
                                    "open": "8680.000000000000000000",
                                    "high": "8685.000000000000000000",
                                    "low": "8675.000000000000000000",
                                    "close": "8685.000000000000000000",
                                    "volume": "57373.000000000000000000"
                                }
                            }
                        }
                    }
                },
                "description": ""
            },
            "BadRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BadRequestType"
                        }
                    }
                },
                "description": "Bad Request\n\nA 400 is the most commonly expected error response and indicates that a request failed due to providing bad input. Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned in the response before re-sending the request."
            },
            "MyOrders": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PagedOrdersResponse"
                        },
                        "examples": {
                            "OrdersResponse": {
                                "value": {
                                    "next": "cD0yMDIxLTA4LTIwKzEyJTNBNDYlM0ExOC40Mjg3ODclMkIwMCUzQTAw",
                                    "results": [
                                        {
                                            "id": "671de6fe-32fa-4816-8756-3b57a327798b",
                                            "market": "ETH/USDC",
                                            "side": 1,
                                            "type": 2,
                                            "status": 4,
                                            "price": "3211.250000000000000000",
                                            "quantity": "0.420000000000000000",
                                            "created_at": "2021-08-20T12:47:21.479712Z",
                                            "client_id": "f3dfd483-9de7-4cf4-ac5f-fe7c6153e1b5",
                                            "orig_quantity": "0.420000000000000000",
                                            "average_price": 0,
                                            "reduce_only": false,
                                            "duration": 2
                                        },
                                        {
                                            "id": "656875b9-0f3e-4169-9236-da0a0531c512",
                                            "market": "ETH/USDC",
                                            "side": 1,
                                            "type": 2,
                                            "status": 2,
                                            "price": "3211.250000000000000000",
                                            "quantity": "1.618000000000000000",
                                            "created_at": "2021-08-20T12:47:21.471516Z",
                                            "client_id": "50aa5d48-5e93-4a72-85a3-d63ac3683c6f",
                                            "orig_quantity": "1.618000000000000000",
                                            "average_price": 0,
                                            "duration": 2
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Paginated orders response"
            },
            "MyTrades": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PagedHistoryTrades"
                        },
                        "examples": {
                            "TradesResponse": {
                                "value": {
                                    "next": "cD0yMDIxLTA3LTIwKzEwJTNBMjglM0EzNS4yNTI3OTMlMkIwMCUzQTAw",
                                    "results": [
                                        {
                                            "trader_id": 119717,
                                            "market_id": 1,
                                            "traded_at": "2021-08-18T15:31:32.229211Z",
                                            "side": 1,
                                            "price": "45245.000000000000000000",
                                            "quantity": "1.000000000000000000",
                                            "contract_id": 130089258,
                                            "order_id": "19fba70e-9ea8-49fb-ad9f-553afa1c347c"
                                        },
                                        {
                                            "trader_id": 119717,
                                            "market_id": 24,
                                            "traded_at": "2021-08-06T12:15:02.486081Z",
                                            "side": 1,
                                            "price": "0.002400000000000000",
                                            "quantity": "564.000000000000000000",
                                            "contract_id": 117694099,
                                            "order_id": "99244c53-9215-43fe-9e83-7bd3a84acd15"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Paginated trades response"
            },
            "CurrencyList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    }
                },
                "description": ""
            },
            "MarketList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Market"
                            }
                        },
                        "examples": {
                            "M": {
                                "value": [
                                    {
                                        "id": 2,
                                        "name": "ETH/USD",
                                        "code": "ETHUSD",
                                        "market_type": 1,
                                        "base_currency": {
                                            "id": 4,
                                            "name": "Ethereum",
                                            "code": "ETH",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 3143.31
                                        },
                                        "quote_currency": {
                                            "id": 3,
                                            "name": "USD",
                                            "code": "USD",
                                            "currency_scale": 2,
                                            "engine_scale": 4,
                                            "converter_allowed": true,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 1
                                        },
                                        "description": "ETH/USD Perpetual Futures",
                                        "tick_size": "1.000000000000000000",
                                        "tick_price": "1.000000000000000000",
                                        "tick_scale": 0,
                                        "pnl_scale": 0,
                                        "mark_price_scale": 2,
                                        "category": "Futures DGTX",
                                        "quantity_scale": 0,
                                        "large_scale": 0,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 3106,
                                        "highPx": 3174,
                                        "lowPx": 3059,
                                        "pxChange24h": 1.519468186134853,
                                        "volume24h": 341013,
                                        "volume24hUsd": 3897986.45688654,
                                        "lastTradePx": 3159,
                                        "usd_scale": 2,
                                        "liquidity_reward_currency": 1,
                                        "contract_currency": {
                                            "id": 1,
                                            "name": "Digitex",
                                            "code": "DGTX",
                                            "currency_scale": 4,
                                            "engine_scale": 4,
                                            "converter_allowed": false,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.00367019
                                        },
                                        "funding_rate": 3.0E-4
                                    },
                                    {
                                        "id": 1,
                                        "name": "BTC/USD",
                                        "code": "BTCUSD",
                                        "market_type": 1,
                                        "base_currency": {
                                            "id": 2,
                                            "name": "Bitcoin",
                                            "code": "BTC",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "37,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "0.000050000000000000",
                                            "usd_rate": 47132.9
                                        },
                                        "quote_currency": {
                                            "id": 3,
                                            "name": "USD",
                                            "code": "USD",
                                            "currency_scale": 2,
                                            "engine_scale": 4,
                                            "converter_allowed": true,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 1
                                        },
                                        "description": "BTC/USD Perpetual Futures",
                                        "tick_size": "5.000000000000000000",
                                        "tick_price": "0.100000000000000000",
                                        "tick_scale": 0,
                                        "pnl_scale": 1,
                                        "mark_price_scale": 2,
                                        "category": "Futures DGTX",
                                        "quantity_scale": 0,
                                        "large_scale": 0,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 47055,
                                        "highPx": 47780,
                                        "lowPx": 46340,
                                        "pxChange24h": 0.1380188979721839,
                                        "volume24h": 1063147,
                                        "volume24hUsd": 3673095.391770591,
                                        "lastTradePx": 47095,
                                        "usd_scale": 2,
                                        "liquidity_reward_currency": 1,
                                        "contract_currency": {
                                            "id": 1,
                                            "name": "Digitex",
                                            "code": "DGTX",
                                            "currency_scale": 4,
                                            "engine_scale": 4,
                                            "converter_allowed": false,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.00367019
                                        },
                                        "funding_rate": 3.0E-4
                                    },
                                    {
                                        "id": 16,
                                        "name": "ETH/USD USDC",
                                        "code": "FS:ETHUSD",
                                        "market_type": 1,
                                        "base_currency": {
                                            "id": 4,
                                            "name": "Ethereum",
                                            "code": "ETH",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 3143.31
                                        },
                                        "quote_currency": {
                                            "id": 3,
                                            "name": "USD",
                                            "code": "USD",
                                            "currency_scale": 2,
                                            "engine_scale": 4,
                                            "converter_allowed": true,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 1
                                        },
                                        "description": "ETH/USD future nominated in DUSD",
                                        "tick_size": "1.000000000000000000",
                                        "tick_price": "0.001000000000000000",
                                        "tick_scale": 0,
                                        "pnl_scale": 4,
                                        "mark_price_scale": 3,
                                        "category": "Futures USDC",
                                        "quantity_scale": 0,
                                        "large_scale": 0,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 3109,
                                        "highPx": 3174,
                                        "lowPx": 3059,
                                        "pxChange24h": 1.1139401654996817,
                                        "volume24h": 361768,
                                        "volume24hUsd": 1125049.3721364,
                                        "lastTradePx": 3142,
                                        "usd_scale": 2,
                                        "contract_currency": {
                                            "id": 7,
                                            "name": "USD Coin",
                                            "code": "USDC",
                                            "currency_scale": 4,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "11,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.9978
                                        },
                                        "funding_rate": 3.0E-4
                                    },
                                    {
                                        "id": 14,
                                        "name": "BTC/USD USDC",
                                        "code": "FS:BTCUSD",
                                        "market_type": 1,
                                        "base_currency": {
                                            "id": 2,
                                            "name": "Bitcoin",
                                            "code": "BTC",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "37,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "0.000050000000000000",
                                            "usd_rate": 47132.9
                                        },
                                        "quote_currency": {
                                            "id": 3,
                                            "name": "USD",
                                            "code": "USD",
                                            "currency_scale": 2,
                                            "engine_scale": 4,
                                            "converter_allowed": true,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 1
                                        },
                                        "description": "BTC/USD future nominated in USDC",
                                        "tick_size": "5.000000000000000000",
                                        "tick_price": "0.005000000000000000",
                                        "tick_scale": 0,
                                        "pnl_scale": 2,
                                        "mark_price_scale": 1,
                                        "category": "Futures USDC",
                                        "quantity_scale": 0,
                                        "large_scale": 0,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 47030,
                                        "highPx": 47795,
                                        "lowPx": 46340,
                                        "pxChange24h": 0.08492569002123142,
                                        "volume24h": 436631,
                                        "volume24hUsd": 2.0523822441309E7,
                                        "lastTradePx": 47100,
                                        "usd_scale": 2,
                                        "contract_currency": {
                                            "id": 7,
                                            "name": "USD Coin",
                                            "code": "USDC",
                                            "currency_scale": 4,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "11,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.9978
                                        },
                                        "funding_rate": 3.0E-4
                                    },
                                    {
                                        "id": 15,
                                        "name": "BTC1/USD USDC",
                                        "code": "FS:BTC1USD",
                                        "market_type": 1,
                                        "base_currency": {
                                            "id": 2,
                                            "name": "Bitcoin",
                                            "code": "BTC",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "37,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "0.000050000000000000",
                                            "usd_rate": 47132.9
                                        },
                                        "quote_currency": {
                                            "id": 3,
                                            "name": "USD",
                                            "code": "USD",
                                            "currency_scale": 2,
                                            "engine_scale": 4,
                                            "converter_allowed": true,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 1
                                        },
                                        "description": "BTC1/USD future nominated in USDC",
                                        "tick_size": "1.000000000000000000",
                                        "tick_price": "0.000100000000000000",
                                        "tick_scale": 0,
                                        "pnl_scale": 2,
                                        "mark_price_scale": 1,
                                        "category": "Futures USDC",
                                        "quantity_scale": 0,
                                        "large_scale": 0,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 0,
                                        "highPx": 47795,
                                        "lowPx": 46349,
                                        "pxChange24h": 0.07431944621395507,
                                        "volume24h": 498331,
                                        "volume24hUsd": 2343922.48353828,
                                        "lastTradePx": 47094,
                                        "usd_scale": 2,
                                        "contract_currency": {
                                            "id": 7,
                                            "name": "USD Coin",
                                            "code": "USDC",
                                            "currency_scale": 4,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "11,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.9978
                                        },
                                        "funding_rate": 3.0E-4
                                    },
                                    {
                                        "id": 24,
                                        "name": "DGTX/USDC",
                                        "code": "S:DGTXUSDC",
                                        "market_type": 2,
                                        "base_currency": {
                                            "id": 1,
                                            "name": "Digitex",
                                            "code": "DGTX",
                                            "currency_scale": 4,
                                            "engine_scale": 4,
                                            "converter_allowed": false,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.00367019
                                        },
                                        "quote_currency": {
                                            "id": 7,
                                            "name": "USD Coin",
                                            "code": "USDC",
                                            "currency_scale": 4,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "11,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.9978
                                        },
                                        "description": "DGTX/USDC spot",
                                        "tick_size": "0.000100000000000000",
                                        "tick_price": "0.000000000000000000",
                                        "tick_scale": 4,
                                        "pnl_scale": 4,
                                        "mark_price_scale": 4,
                                        "category": "Spot",
                                        "quantity_scale": 0,
                                        "large_scale": 0,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 0,
                                        "highPx": 0.0038,
                                        "lowPx": 0.0025,
                                        "pxChange24h": 8.333333333333334,
                                        "volume24h": 4887740,
                                        "volume24hUsd": 17938.9344706,
                                        "lastTradePx": 0.0036,
                                        "usd_scale": 4,
                                        "liquidity_reward_currency": 1,
                                        "funding_rate": 0
                                    },
                                    {
                                        "id": 4,
                                        "name": "DGTX/ETH",
                                        "code": "S:DGTXETH",
                                        "market_type": 2,
                                        "base_currency": {
                                            "id": 1,
                                            "name": "Digitex",
                                            "code": "DGTX",
                                            "currency_scale": 4,
                                            "engine_scale": 4,
                                            "converter_allowed": false,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.00367019
                                        },
                                        "quote_currency": {
                                            "id": 4,
                                            "name": "Ethereum",
                                            "code": "ETH",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 3143.31
                                        },
                                        "description": "DGTX/ETH Spot",
                                        "tick_size": "0.000000100000000000",
                                        "tick_price": "0.000000100000000000",
                                        "tick_scale": 7,
                                        "pnl_scale": 8,
                                        "mark_price_scale": 8,
                                        "category": "Spot",
                                        "quantity_scale": 0,
                                        "large_scale": 2,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 0,
                                        "highPx": 1.3E-6,
                                        "lowPx": 1.0E-6,
                                        "pxChange24h": 16.666666666666668,
                                        "volume24h": 3060042,
                                        "volume24hUsd": 11230.93554798,
                                        "lastTradePx": 1.2E-6,
                                        "usd_scale": 4,
                                        "liquidity_reward_currency": 1,
                                        "funding_rate": 0
                                    },
                                    {
                                        "id": 18,
                                        "name": "BTC/USDC",
                                        "code": "S:BTCUSDC",
                                        "market_type": 2,
                                        "base_currency": {
                                            "id": 2,
                                            "name": "Bitcoin",
                                            "code": "BTC",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "37,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "0.000050000000000000",
                                            "usd_rate": 47132.9
                                        },
                                        "quote_currency": {
                                            "id": 7,
                                            "name": "USD Coin",
                                            "code": "USDC",
                                            "currency_scale": 4,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "11,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.9978
                                        },
                                        "description": "BTC/USDC spot",
                                        "tick_size": "5.000000000000000000",
                                        "tick_price": "0.000000000000000000",
                                        "tick_scale": 0,
                                        "pnl_scale": 0,
                                        "mark_price_scale": 4,
                                        "category": "Spot",
                                        "quantity_scale": 4,
                                        "large_scale": 0,
                                        "lot_size": "0.000100000000000000",
                                        "openPx": 0,
                                        "highPx": 47795,
                                        "lowPx": 47025,
                                        "pxChange24h": -0.06376195536663125,
                                        "volume24h": 22.0417,
                                        "volume24hUsd": 1038889.24193,
                                        "lastTradePx": 47050,
                                        "usd_scale": 2,
                                        "liquidity_reward_currency": 1,
                                        "funding_rate": 0
                                    },
                                    {
                                        "id": 20,
                                        "name": "ETH/USDC",
                                        "code": "S:ETHUSDC",
                                        "market_type": 2,
                                        "base_currency": {
                                            "id": 4,
                                            "name": "Ethereum",
                                            "code": "ETH",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 3143.31
                                        },
                                        "quote_currency": {
                                            "id": 7,
                                            "name": "USD Coin",
                                            "code": "USDC",
                                            "currency_scale": 4,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "11,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.9978
                                        },
                                        "description": "ETH/USDC Spot",
                                        "tick_size": "0.250000000000000000",
                                        "tick_price": "0.000000000000000000",
                                        "tick_scale": 2,
                                        "pnl_scale": 4,
                                        "mark_price_scale": 4,
                                        "category": "Spot",
                                        "quantity_scale": 3,
                                        "large_scale": 0,
                                        "lot_size": "0.000100000000000000",
                                        "openPx": 0,
                                        "highPx": 3174.5,
                                        "lowPx": 3116,
                                        "pxChange24h": 1.2328985046134266,
                                        "volume24h": 46.032,
                                        "volume24hUsd": 144692.84592,
                                        "lastTradePx": 3143,
                                        "usd_scale": 2,
                                        "liquidity_reward_currency": 1,
                                        "funding_rate": 0
                                    },
                                    {
                                        "id": 19,
                                        "name": "ETH/BTC",
                                        "code": "S:ETHBTC",
                                        "market_type": 2,
                                        "base_currency": {
                                            "id": 4,
                                            "name": "Ethereum",
                                            "code": "ETH",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 3143.31
                                        },
                                        "quote_currency": {
                                            "id": 2,
                                            "name": "Bitcoin",
                                            "code": "BTC",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "37,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "0.000050000000000000",
                                            "usd_rate": 47132.9
                                        },
                                        "description": "ETH/BTC spot",
                                        "tick_size": "0.000010000000000000",
                                        "tick_price": "0.000000000000000000",
                                        "tick_scale": 5,
                                        "pnl_scale": 8,
                                        "mark_price_scale": 8,
                                        "category": "Spot",
                                        "quantity_scale": 3,
                                        "large_scale": 0,
                                        "lot_size": "0.001000000000000000",
                                        "openPx": 0.06609,
                                        "highPx": 0.06681,
                                        "lowPx": 0.06569,
                                        "pxChange24h": 0.9452363090772693,
                                        "volume24h": 80.376,
                                        "volume24hUsd": 252646.68456,
                                        "lastTradePx": 0.06665,
                                        "usd_scale": 2,
                                        "liquidity_reward_currency": 1,
                                        "funding_rate": 0
                                    },
                                    {
                                        "id": 23,
                                        "name": "DGTX/BTC",
                                        "code": "S:DGTXBTC",
                                        "market_type": 2,
                                        "base_currency": {
                                            "id": 1,
                                            "name": "Digitex",
                                            "code": "DGTX",
                                            "currency_scale": 4,
                                            "engine_scale": 4,
                                            "converter_allowed": false,
                                            "converter_chain": "",
                                            "converter_rate_multiplier": "1.00",
                                            "withdraw_fee": "100.000000000000000000",
                                            "usd_rate": 0.00367019
                                        },
                                        "quote_currency": {
                                            "id": 2,
                                            "name": "Bitcoin",
                                            "code": "BTC",
                                            "currency_scale": 8,
                                            "engine_scale": 8,
                                            "converter_allowed": true,
                                            "converter_chain": "37,3",
                                            "converter_rate_multiplier": "1.05",
                                            "withdraw_fee": "0.000050000000000000",
                                            "usd_rate": 47132.9
                                        },
                                        "description": "DGTX/BTC spot",
                                        "tick_size": "0.000000010000000000",
                                        "tick_price": "0.000000000000000000",
                                        "tick_scale": 8,
                                        "pnl_scale": 8,
                                        "mark_price_scale": 8,
                                        "category": "Spot",
                                        "quantity_scale": 0,
                                        "large_scale": 2,
                                        "lot_size": "1.000000000000000000",
                                        "openPx": 0,
                                        "highPx": 8.0E-8,
                                        "lowPx": 7.0E-8,
                                        "pxChange24h": 12.5,
                                        "volume24h": 3612774,
                                        "volume24hUsd": 13259.56700706,
                                        "lastTradePx": 8.0E-8,
                                        "usd_scale": 4,
                                        "liquidity_reward_currency": 1,
                                        "funding_rate": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Returns list of markets"
            },
            "ExchangeInfo": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ExchangeInfo"
                        }
                    }
                },
                "description": "Exchange information"
            },
            "NotFound": {
                "description": "A 404 indicates that the addressed resource was not found / does not exist."
            },
            "InternalServerError": {
                "description": "Internal Server Error\n\nA 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs to be reported and resolved."
            },
            "Unauthorized": {
                "description": "A 401 indicates that the request is not properly authenticated."
            }
        },
        "securitySchemes": {
            "TradersToken": {
                "type": "apiKey",
                "description": "Trader's token should be place in the header of the request, e.g.:<br>\n{\"Authorization\": \"Token 4321532asfasdf31453245234adsadsf\"}",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "TradersToken": [
            ]
        }
    ]
}